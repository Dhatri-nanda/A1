# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_LgUu4F1c_QQmbKjK9CPf7xLgIZ1Is61
"""

import numpy as np 
import matplotlib.pyplot as plt
import subprocess
import shlex

A = np.array([0,3])
B = np.array([-3,0])
C = np.array([3,0])
D = np.array([0,0])
O = np.array([0,1])
def line_gen(A,B):
  len =10
  x_AB = np.zeros((2,len))
  lam_1 = np.linspace(0,1,len)
  for i in range(len):
    temp1 = A + lam_1[i]*(B-A)
    x_AB[:,i]= temp1.T
  return x_AB

x_AB = line_gen(A,B)
x_BC = line_gen(B,C)
x_CA = line_gen(C,A)
x_AD = line_gen(A,D)

plt.plot(x_AB[0,:],x_AB[1,:],label='$AB$')
plt.plot(x_BC[0,:],x_BC[1,:],label='$BC$')
plt.plot(x_CA[0,:],x_CA[1,:],label='$CA$')
plt.plot(x_AD[0,:],x_AD[1,:],label='$AD$')

plt.plot(A[0], A[1], 'o')
plt.text(A[0] * (1), A[1] * (1 + 0.01) , 'A')
plt.plot(B[0], B[1], 'o')
plt.text(B[0] * (1 - 0.03), B[1] * (1) , 'B')
plt.plot(C[0], C[1], 'o')
plt.text(C[0] * (1 + 0.03), C[1] * (1 + 0.1) , 'C')
plt.plot(D[0],D[1],'o')
plt.text(D[0] * (1 + 0.03), D[1] * (1 + 0.1) , 'D')
plt.plot(O[0],O[1],'o')
plt.text(O[0] * (1 - 0.1), O[1] * (1 + 0.05) , 'O')
plt.legend()
plt.show()

import soundfile as sf
from scipy import signal
#read .wav file
input_signal,fs = sf.read('Sound_Noise.wav')
#sampling frequency of Input signal
sampl_freq=fs
#order of the filter
order=4
#cutoff frquency 4kHz
cutoff_freq=4000.0
#digital frequency
Wn = 2*cutoff_freq/sampl_freq
# b and a are numerator and denominator polynomials respectively
b, a = signal.butter(order,Wn, 'low')
#filter the input signal with butterworth filter
output_signal = signal.filtfilt(b, a, input_signal)
#output signal = signal.lfilter(b, a, input_signal)
#write the output signal into .wav file
sf.write('Sound_With_ReducedNoise.wav', output_signal, fs)
